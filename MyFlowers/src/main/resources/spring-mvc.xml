<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 1.扫描@Controller类 -->
	<context:component-scan base-package="com.lqinggang.controller"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<context:component-scan base-package="com.lqinggang.common.controller"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<!-- 组件扫描，扫描com.lqinggang包下的所有文件 -->
	<!-- 将采用注解的方式 -->
	<!-- 注解驱动 -->
	<mvc:annotation-driven validator="validator">
		<!-- 如果自定义message-converters，默认的message-converters将失效 -->
		<!-- <mvc:message-converters> -->
		<!-- 定义文本转化器 -->
		<!-- <bean class="org.springframework.http.converter.StringHttpMessageConverter"> 
			<constructor-arg index="0" value="UTF-8" /> </bean> </mvc:message-converters> -->
		<!-- Json -->
		<mvc:message-converters register-defaults="true">
			<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
			<bean id="fastJsonHttpMessageConverter"
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:default-servlet-handler />
	
	<!-- 2.拦截器设置 -->
	<mvc:interceptors>
		<!-- 前台页面拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/users/cart" />
			<mvc:mapping path="/users/addtocart" />
			<mvc:mapping path="/users/datasettingpage" />
			<mvc:mapping path="/users/buy" />
			<bean class="com.lqinggang.common.interceptor.UsersIntercepter"></bean>
		</mvc:interceptor>
		<!-- 后台页面拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/admin/*" />
			<mvc:mapping path="/admin/**" />
			<bean class="com.lqinggang.common.interceptor.AdminIntercepter"></bean>
			<!-- 所有的后台页面都要先验证管理员是否已经登录 -->
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">/common/error/403</prop>
				<prop key="java.lang.Throwable">/common/error/error</prop>
				<prop key="400">/common/error/400</prop>
				<prop key="403">/common/error/403</prop>
				<prop key="404">/common/error/404</prop>
				<prop key="500">/common/error/500</prop>
			</props>
		</property>
	</bean>
	<!-- 视图解析 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- InternalResourceViewResolver视图解析器，用来解析Servlet和JSP 对应的InternalResourceView用来处理Servlet和JSP -->
		<property name="prefix" value="/WEB-INF/view/"></property>
		<!-- 视图解析器将去这个前缀下找文件 -->
		<property name="suffix" value=".jsp"></property>
		<!-- 视图解析器找的文件的后缀名 -->
	</bean>
	<!-- 这里的配置和control有关，control将使用return的方法表示将要显示的文件 例如：return "control"表示：显示/WEB-INF/jsp/control.jsp文件 -->

	<!-- 数据验证 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<property name="validationMessageSource" ref="validatorMessageSource" />
	</bean>
	<bean id="validatorMessageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:validationMessageSource</value>
			</list>
		</property>
		<!-- 指定文件的编码 -->
		<property name="fileEncodings" value="utf8"></property>
		<!-- 对资源文件内容缓存的时间，单位秒 -->
		<property name="cacheSeconds" value="120"></property>
	</bean>

	<!-- 文件上传 -->
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
		set the max upload size 10MB <property name="maxUploadSize"> <value>5048576000</value> 
		</property> <property name="maxInMemorySize"> <value>4096</value> </property> 
		</bean> -->
</beans>
